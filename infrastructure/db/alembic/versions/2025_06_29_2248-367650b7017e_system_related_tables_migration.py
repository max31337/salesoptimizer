"""system related tables migration

Revision ID: 367650b7017e
Revises: db418831f852
Create Date: 2025-06-29 22:48:05.091595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from infrastructure.db.models.user_model import GUID

# revision identifiers, used by Alembic.
revision: str = '367650b7017e'
down_revision: Union[str, None] = 'db418831f852'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sla_metrics',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('threshold_warning', sa.Float(), nullable=False),
    sa.Column('threshold_critical', sa.Float(), nullable=False),
    sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sla_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sla_metrics_measured_at'), ['measured_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_metrics_metric_type'), ['metric_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_metrics_status'), ['status'], unique=False)

    op.create_table('sla_reports',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('overall_status', sa.String(length=20), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('recommendations', sa.JSON(), nullable=False),
    sa.Column('metrics_snapshot', sa.JSON(), nullable=False),
    sa.Column('critical_metrics_count', sa.Integer(), nullable=False),
    sa.Column('warning_metrics_count', sa.Integer(), nullable=False),
    sa.Column('healthy_metrics_count', sa.Integer(), nullable=False),
    sa.Column('total_metrics_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sla_reports', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sla_reports_generated_at'), ['generated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_reports_overall_status'), ['overall_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_reports_report_type'), ['report_type'], unique=False)

    op.create_table('sla_thresholds',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('warning_threshold', sa.Float(), nullable=False),
    sa.Column('critical_threshold', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('metric_type', 'is_active', name='_metric_type_active_uc')
    )
    with op.batch_alter_table('sla_thresholds', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sla_thresholds_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_thresholds_metric_type'), ['metric_type'], unique=False)

    op.create_table('uptime_events',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('auto_detected', sa.Boolean(), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('uptime_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_uptime_events_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_uptime_events_service_name'), ['service_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_uptime_events_timestamp'), ['timestamp'], unique=False)

    op.create_table('uptime_metrics',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('uptime_percentage', sa.Float(), nullable=False),
    sa.Column('total_downtime_seconds', sa.Float(), nullable=False),
    sa.Column('downtime_incidents', sa.Integer(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('uptime_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_uptime_metrics_period_end'), ['period_end'], unique=False)
        batch_op.create_index(batch_op.f('ix_uptime_metrics_period_start'), ['period_start'], unique=False)
        batch_op.create_index(batch_op.f('ix_uptime_metrics_service_name'), ['service_name'], unique=False)

    op.create_table('sla_alerts',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.String(length=1000), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('acknowledged', sa.Boolean(), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('acknowledged_by', GUID(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['acknowledged_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sla_alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sla_alerts_acknowledged'), ['acknowledged'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_alerts_alert_type'), ['alert_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_alerts_metric_type'), ['metric_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_alerts_resolved'), ['resolved'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_alerts_triggered_at'), ['triggered_at'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sla_alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_alerts_triggered_at'))
        batch_op.drop_index(batch_op.f('ix_sla_alerts_resolved'))
        batch_op.drop_index(batch_op.f('ix_sla_alerts_metric_type'))
        batch_op.drop_index(batch_op.f('ix_sla_alerts_alert_type'))
        batch_op.drop_index(batch_op.f('ix_sla_alerts_acknowledged'))

    op.drop_table('sla_alerts')
    op.drop_table('oauth_providers', schema='shared')
    with op.batch_alter_table('uptime_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_uptime_metrics_service_name'))
        batch_op.drop_index(batch_op.f('ix_uptime_metrics_period_start'))
        batch_op.drop_index(batch_op.f('ix_uptime_metrics_period_end'))

    op.drop_table('uptime_metrics')
    with op.batch_alter_table('uptime_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_uptime_events_timestamp'))
        batch_op.drop_index(batch_op.f('ix_uptime_events_service_name'))
        batch_op.drop_index(batch_op.f('ix_uptime_events_event_type'))

    op.drop_table('uptime_events')
    with op.batch_alter_table('sla_thresholds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_thresholds_metric_type'))
        batch_op.drop_index(batch_op.f('ix_sla_thresholds_is_active'))

    op.drop_table('sla_thresholds')
    with op.batch_alter_table('sla_reports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_reports_report_type'))
        batch_op.drop_index(batch_op.f('ix_sla_reports_overall_status'))
        batch_op.drop_index(batch_op.f('ix_sla_reports_generated_at'))

    op.drop_table('sla_reports')
    with op.batch_alter_table('sla_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_metrics_status'))
        batch_op.drop_index(batch_op.f('ix_sla_metrics_metric_type'))
        batch_op.drop_index(batch_op.f('ix_sla_metrics_measured_at'))

    op.drop_table('sla_metrics')
    # ### end Alembic commands ###
