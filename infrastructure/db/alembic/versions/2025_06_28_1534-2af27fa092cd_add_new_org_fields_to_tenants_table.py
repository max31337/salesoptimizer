"""add new org fields to tenants table and remove uptime tables, also added user fields for terms and marketing opt-in etc. 

Revision ID: 2af27fa092cd
Revises: add_uptime_monitoring
Create Date: 2025-06-28 15:34:01.588744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2af27fa092cd'
down_revision: Union[str, None] = 'add_uptime_monitoring'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('uptime_events', schema=None) as batch_op:
        batch_op.drop_index('ix_uptime_events_event_type')
        batch_op.drop_index('ix_uptime_events_service_name')
        batch_op.drop_index('ix_uptime_events_timestamp')

    op.drop_table('uptime_events')
    with op.batch_alter_table('uptime_metrics', schema=None) as batch_op:
        batch_op.drop_index('ix_uptime_metrics_period_end')
        batch_op.drop_index('ix_uptime_metrics_period_start')
        batch_op.drop_index('ix_uptime_metrics_service_name')

    op.drop_table('uptime_metrics')
    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('industry', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('organization_size', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('website', sa.String(length=255), nullable=True))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_title', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('accept_terms', sa.Boolean(), nullable=False, server_default=sa.false()))
        batch_op.add_column(sa.Column('accept_privacy', sa.Boolean(), nullable=False, server_default=sa.false()))
        batch_op.add_column(sa.Column('marketing_opt_in', sa.Boolean(), nullable=False, server_default=sa.false()))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('marketing_opt_in')
        batch_op.drop_column('accept_privacy')
        batch_op.drop_column('accept_terms')
        batch_op.drop_column('job_title')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.drop_column('website')
        batch_op.drop_column('organization_size')
        batch_op.drop_column('industry')

    op.create_table('uptime_metrics',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('service_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('period_start', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('period_end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('uptime_percentage', sa.Float(precision=53), autoincrement=False, nullable=False),
    sa.Column('total_downtime_seconds', sa.Float(precision=53), autoincrement=False, nullable=False),
    sa.Column('downtime_incidents', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('calculated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='uptime_metrics_pkey')
    )
    with op.batch_alter_table('uptime_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_uptime_metrics_service_name', ['service_name'], unique=False)
        batch_op.create_index('ix_uptime_metrics_period_start', ['period_start'], unique=False)
        batch_op.create_index('ix_uptime_metrics_period_end', ['period_end'], unique=False)

    op.create_table('uptime_events',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('service_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('duration_seconds', sa.Float(precision=53), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('severity', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('auto_detected', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='uptime_events_pkey')
    )
    with op.batch_alter_table('uptime_events', schema=None) as batch_op:
        batch_op.create_index('ix_uptime_events_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_uptime_events_service_name', ['service_name'], unique=False)
        batch_op.create_index('ix_uptime_events_event_type', ['event_type'], unique=False)

    # ### end Alembic commands ###
